Language: Cpp
AccessModifierOffset: -4
AlignAfterOpenBracket: AlwaysBreak
AlignArrayOfStructures: Right
AlignConsecutiveAssignments:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: true
  AlignCompound: true
  PadOperators: true
AlignConsecutiveBitFields:
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: true
AlignConsecutiveDeclarations:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: true
  AlignFunctionDeclarations: true
  AlignFunctionPointers: true
AlignConsecutiveMacros:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
AlignConsecutiveShortCaseStatements:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCaseArrows: true
  AlignCaseColons: false
# @future AlignConsecutiveTableGenBreakingDAGArgColons:
#   Enabled: false
# @future AlignConsecutiveTableGenCondOperatorColons:
#   Enabled: false
# @future AlignConsecutiveTableGenDefinitionColons
#   Enabled: false
AlignEscapedNewlines: Left
AlignOperands: Align
AlignTrailingComments:
  Kind: Always
  OverEmptyLines: 1
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowBreakBeforeNoexceptSpecifier: OnlyWithParen
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseExpressionOnASingleLine: true
AllowShortCaseLabelsOnASingleLine: false
AllowShortCompoundRequirementOnASingleLine: true
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false
AllowShortNamespacesOnASingleLine: false
AlwaysBreakBeforeMultilineStrings: false
AttributeMacros: [__input, __output, __unused]
BinPackArguments: true
# @future BinPackLongBracedLists: true
BinPackParameters: true
BitFieldColonSpacing: Both
BraceWrapping:
  AfterCaseLabel: true
  AfterClass: true
  AfterControlStatement: Always
  AfterEnum: true
  AfterFunction: true
  AfterNamespace: false
  AfterObjCDeclaration: false
  AfterStruct: true
  AfterUnion: true
  AfterExternBlock: false
  BeforeCatch: true
  BeforeElse: true
  BeforeLambdaBody: false
  BeforeWhile: true
  IndentBraces: false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true
BracedInitializerIndentWidth: 4
BreakAdjacentStringLiterals: false
BreakAfterAttributes: Never
BreakAfterReturnType: Automatic
BreakArrays: false
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom
BreakBeforeConceptDeclarations: Never
BreakBeforeInlineASMColon: Never
# @future BreakBeforeTemplateCloser: false
BreakBeforeTernaryOperators: false
BreakBinaryOperations: Never
BreakConstructorInitializers: AfterColon
BreakFunctionDefinitionParameters: false
BreakInheritanceList: AfterComma
BreakStringLiterals: true
BreakTemplateDeclarations: No
ColumnLimit: 160
CommentPragmas: '^ FOOBAR pragma:'
CompactNamespaces: true
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DerivePointerAlignment: false
DisableFormat: false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always
# @future EnumTrailingComma: Remove
# @experimental: ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true
ForEachMacros: ['foreach', 'for_each', 'Q_FOREACH', 'BOOST_FOREACH']
IfMacros: ['IF']
IncludeBlocks: Preserve
IncludeCategories:
  - Regex: '^"(llvm|llvm-c|clang|clang-c)/'
    Priority: 2
    SortPriority: 2
    CaseSensitive: true
  - Regex: '^(<|"(gtest|gmock|isl|json)/)'
    Priority: 3
  - Regex: '<[[:alnum:].]+>'
    Priority: 4
  - Regex: '.*'
    Priority: 1
    SortPriority: 0
IncludeIsMainRegex: '(Test)?$'
IncludeIsMainSourceRegex: ''
IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: true
IndentExportBlock: true
IndentExternBlock: Indent
IndentGotoLabels: false
IndentPPDirectives: BeforeHash
IndentRequiresClause: true
IndentWidth: 4
IndentWrappedFunctionNames: true
InsertBraces: true
InsertNewlineAtEOF: true
InsertTrailingCommas: None
IntegerLiteralSeparator:
  Binary: 4
  BinaryMinDigits: 7
  Decimal: 3
  DecimalMinDigits: 4
  Hex: 4
  HexMinDigits: 5
# @unused: JavaImportGroups: ['com.example', 'com', 'org']
# @unused: JavaScriptQuotes: Leave, Single or Double
# @unused: JavaScriptWrapImports: false
KeepEmptyLines:
  AtEndOfFile: false
  AtStartOfBlock: false
  AtStartOfFile: false
KeepFormFeed: false
LambdaBodyIndentation: OuterScope
LineEnding: DeriveLF
# @unused: MacroBlockBegin:
# @unused: MacroBlockEnd:
MainIncludeChar: Any
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
# @unused: NamespaceMacros:
# @unused ObjCBinPackProtocolList: Always
# @unused ObjCBlockIndentWidth: 3
# @unused ObjCBreakBeforeNestedBlockParam: false
# @unused ObjCPropertyAttributeOrder:
# @unused ObjCSpaceAfterProperty: false
# @unused ObjCSpaceBeforeProtocolList: false
PPIndentWidth: -1
PackConstructorInitializers: BinPack
# @todo PenaltyBreakAssignment:
# @todo PenaltyBreakBeforeFirstCallParameter:
# @todo PenaltyBreakBeforeMemberAccess:
# @todo PenaltyBreakComment:
# @todo PenaltyBreakFirstLessLess:
# @todo PenaltyBreakOpenParenthesis:
# @todo PenaltyBreakScopeResolution
# @todo PenaltyBreakString:
# @todo PenaltyBreakTemplateDeclaration:
# @todo PenaltyExcessCharacter:
# @todo: PenaltyIndentedWhitespace:
PenaltyReturnTypeOnItsOwnLine: 60
PointerAlignment: Left
# @alternative: QualifierAlignment: Left
QualifierAlignment: Custom
QualifierOrder:
  [
    'inline',
    'friend',
    'static',
    'const',
    'constexpr',
    'volatile',
    'restrict',
    'type',
  ]
# @unused: RawStringFormats:
ReferenceAlignment: Left
ReflowComments: Always
RemoveBracesLLVM: false
RemoveEmptyLinesInUnwrappedLines: true
RemoveParentheses: Leave
RemoveSemicolon: true
RequiresClausePosition: WithPreceding
RequiresExpressionIndentation: OuterScope
SeparateDefinitionBlocks: Always
ShortNamespaceLines: 0
SkipMacroDefinitionBody: true
SortIncludes: CaseInsensitive
# @unused: SortJavaStaticImport:
SortUsingDeclarations: LexicographicNumeric
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeJsonColon: true
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: false
  AfterFunctionDeclarationName: false
  AfterFunctionDefinitionName: false
  AfterIfMacros: false
  AfterOverloadedOperator: false
  AfterPlacementOperator: false
  AfterRequiresInClause: false
  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: Never
SpacesInContainerLiterals: false
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: -1
SpacesInParens: Custom
SpacesInParensOptions:
  ExceptDoubleParentheses: false
  InConditionalStatements: false
  InCStyleCasts: false
  InEmptyParentheses: false
  Other: false
SpacesInSquareBrackets: false
Standard: Latest
# @unused: StatementAttributeLikeMacros: ['IN', 'OUT', 'INOUT']
# @unused: StatementMacros: ['UNUSED']
TabWidth: 4
# @future TableGenBreakInsideDAGArg: DontBreak
# @future TableGenBreakingDAGArgOperators:
# @unused TemplateNames:
# @unused TypeNames:
# @unused TypenameMacros: ['']
UseCRLF: false
UseTab: Never
# @unused VariableTemplates:
VerilogBreakBetweenInstancePorts: true
WhitespaceSensitiveMacros: ['MAKE_TEXT', 'MAKE_STRING']
WrapNamespaceBodyWithEmptyLines: Never
